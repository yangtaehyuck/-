// const number = function (첫번째요소, ...나머지) {
//   console.log(첫번째요소)
//   console.log(나머지)
// }

// number(1,2,3,4) → 1 [2, 3, 4]
// number([1, 2, 3, 4]) → [1, 2, 3, 4] []




// const 테스트 = function (a) {
//   console.log(a)
// }
// 테스트(10)
// 테스트("안녕하세요")
// 테스트(true)

// const 함수 = function () {
//   console.log("안녕하세요")
// }
// 테스트(함수)  // 실행시키면 아래와 같이 함수 자체가 출력됨 => 위에 테스트 함수에 'a'자리에 아래 만든 함수가 들어가게됨 
// ƒ () {
//    console.log("안녕하세요")
// }


// 매개변수로 전달하는 함수 => 콜백함수
// const 테스트 = function (a) {
//   a()
// }

// const 함수 = function () {
//   console.log("안녕하세요")
// }

// 테스트(함수) // => '안녕하세요'가 출력됨 위에서 a() 자리에 → 함수()가 호출됨 → 매개변수에 함수가 들어가는 것을 '콜백함수'라고 한다
// 테스트(10)
// 테스트("안녕하세요") // => 이렇게 2개를 출력하면 오류가 난다 10(), "안녕하세요"() 라는 함수가 없기때문이다


// const 테스트  = function (a) { // a → 함수
//   a(10) // a(10) → 함수(10)
// }

// const 함수 = function (함수의_매개변수) { // 함수의_매개변수 → 10
//   console.log(`${함수의_매개변수}`)
// }
// 테스트(함수) // => '10'이 출력됨

const 테스트 = function (배열, 콜백함수) { // 배열 => [52, 273, 103, 32] , 콜백함수 => 함수
  for (const 값 of 배열) { //배열 => [52, 273, 103, 32]
    콜백함수(값) // 콜백함수(값) => 함수(값)
  }
}

const 함수 = function (콜백함수_매개변수) { // 콜백함수_매개변수 => 값
  console.log(`${콜백함수_매개변수}`) // 콜백함수_매개변수 => 값   => 52 273 103 32 
}
테스트([52, 273, 103, 32], 함수)

// 위와 아래의 코드는 같음 => 함수라는 함수를 만들지않고 바로 넣어줌

테스트([52, 273, 103, 32], function (콜백함수_매개변수) {
  console.log(`${콜백함수_매개변수}`)
})